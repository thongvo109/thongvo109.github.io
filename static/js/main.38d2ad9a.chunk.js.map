{"version":3,"sources":["Components/Theme/GlobalStyles.js","Components/Theme/Theme.js","Components/Theme/Sun.js","Components/Theme/Moon.js","Components/Theme/Toggler.js","config.js","Utils/auth.js","Components/Common/LoaderSvg.js","Components/Common/Loader.js","Containers/GithubCallback.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Components/Header/Avatar.js","Components/Header/GithubLogin.js","Components/Header/Header.js","Components/Header/HeaderContainer.js","Components/Header/HeaderIcons.js","Components/Header/HeaderSubtitle.js","Components/Header/HeaderTitle.js","Components/Header/HeaderWrapper.js","Containers/Blog.js","Utils/apollo.js","Utils/emoji.js","Utils/tools.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Components/Markdown/Overrides.js","Components/Post/Comment/Comment.js","Components/Post/Comment/CommentContainer.js","Components/Post/Comment/CommentLink.js","Components/Post/Comment/CommentLinkContainer.js","Containers/CommentsSection.js","Containers/BlogPost.js","Router.js","Application.js","Components/Theme/useDarkMode.js","serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","darkTheme","mode","toggleBorder","background","Sun","xmlns","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","Moon","Button","styled","button","Toggle","toggleTheme","onClick","config","githubConvertedToken","githubUserName","githubRepo","enableOAuth","OAuthClientID","OAuthSecret","title","subtitle","header","backgroundColor","backgroundColorDark","titleColor","titleColorDark","subtitleColor","subtitleColorDark","getAuthenticatedUser","a","async","token","localStorage","getItem","fetch","headers","Headers","authorization","response","json","result","LoaderSvg","viewBox","fillRule","transform","strokeOpacity","attributeName","type","from","to","dur","repeatCount","LoaderContainer","span","Loader","GithubCallback","useState","loading","setLoading","useEffect","code","method","URLSearchParams","client_id","client_secret","authenticate","window","location","search","get","then","setItem","access_token","login","setUsername","replace","origin","pathname","BlogContainer","div","CardContainer","props","color","CardHeader","StyledCategory","CardCategory","value","key","id","style","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","labels","setLabels","history","useHistory","nodes","filter","console","log","map","i","readingTime","minutes","number","push","bodyText","Avatar","ButtonContainer","absolute","Text","GithubLogin","isAbsolute","isLoggedIn","href","icon","faGithub","Header","items","faFacebook","link","faLink","HeaderContainer","HeaderWrapper","src","alt","HeaderTitle","HeaderSubtitle","HeaderIcons","index","size","url","open","h1","GET_POSTS","gql","Blog","posts","setPosts","useQuery","error","data","repository","issues","v","client","ApolloClient","uri","request","operation","setContext","atob","userClient","emojis","getEmojiByName","emojiName","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","PostContainer","PostTitle","PostDate","PostDateLink","PostReaction","BackButton","AuthorDetails","AuthorAvatar","img","AuthorName","HyperLink","children","target","rel","className","jsx","CodeBlock","language","docco","Comment","comment","CommentContainer","author","avatarUrl","moment","updatedAt","format","options","overrides","component","pre","CommentLink","CommentLinkContainer","CommentsSection","postUrl","comments","BlogHome","issueNumber","parseInt","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","postComments","setPostComments","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","by","user","content","toggleReaction","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","issue","go","back","onSelect","ref","counters","onAdd","createBrowserHistory","require","Router","exact","path","BlogPost","Application","urlParams","setTheme","setMode","localTheme","useDarkMode","themeToggler","themeMode","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38d2ad9a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  `;\n","export const lightTheme = {\n  mode: \"light\",\n  body: \"#fff\",\n  text: \"#363537\",\n  toggleBorder: \"#070707\",\n  background: \"#363537\",\n};\nexport const darkTheme = {\n  mode: \"dark\",\n  body: \"#2E3440\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import React from \"react\";\n\nexport default function Sun() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n      <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"></path>\n    </svg>\n  );\n}\n","import React from 'react'\n\nexport default function Moon() {\n    return (\n        <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n      </svg>\n    )\n}\n","import React from \"react\";\nimport Sun from \"./Sun\";\nimport Moon from \"./Moon\";\nimport { func, string } from \"prop-types\";\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  background-color: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  width: 70px;\n  height: 70px;\n  outline: none;\n  border-radius: 50%;\n  transition: all 0.1s ease-in-out;\n  color: white;\n  text-align: center;\n  position: fixed;\n  cursor: pointer;\n  right: 30px;\n  bottom: 30px;\n  box-shadow:\n  0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n  0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n  0 12.5px 10px rgba(0, 0, 0, 0.06),\n  0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n  0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n  0 100px 80px rgba(0, 0, 0, 0.12);\n  }`;\nconst Toggle = ({ theme, toggleTheme }) => {\n  return (\n    <Button onClick={toggleTheme}>\n      {theme === \"light\" ? <Moon /> : <Sun />}\n    </Button>\n  );\n};\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n};\nexport default Toggle;\n","export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken:\n    \"Z2hwX3RFUVA5azExQzhsdXEwbDR2V2VKR1VLbUV0WVdUVDQza3c2WA==\",\n\n  // Your Github UserName\n  githubUserName: \"thongvo109\",\n\n  // Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: \"did_change_biometric\",\n\n  // Set it to true if you have a Github app to add to this project\n  // and fill the client ID & secret\n  enableOAuth: true,\n  OAuthClientID: \"Iv1.e4c67b652e09ad53\",\n  OAuthSecret: \"3f270046472a50a8b6a3739c6b70b5ad7ac05fdb\",\n\n  // Your Personal Blog Title\n  title: \"Thong Vo\",\n\n  // Your Personal Blog Subtitle\n  subtitle: \"Flutter Developer\",\n\n  // Header customization\n  header: {\n    backgroundColor: \"#f1f6f8\", // can be a CSS gradient\n    backgroundColorDark: \"#4C566A\",\n    titleColor: \"#ffffff\",\n    titleColorDark: \"#16a085\",\n    subtitleColor: \"#37474f\",\n    subtitleColorDark: \"#D8DEE9\",\n  },\n};\n","export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}","import React from \"react\";\n\nexport default function LoaderSvg({ fill }) {\n  return (\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke={fill}\n    >\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n          <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport LoaderSvg from './LoaderSvg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <LoaderSvg fill=\"#2ecc71\" />\n  </LoaderContainer>\n)","import React, { useEffect, useState } from 'react'\n\nimport { config } from '../config'\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from '../Components/Common/Loader'\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true)\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      body: new URLSearchParams({\n        client_id: OAuthClientID,\n        client_secret: OAuthSecret,\n        code: code,\n      }),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n    })\n\n    return response.json()\n  }\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser()\n    localStorage.setItem('githubUsername', login)\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get('code'))\n    .then((response) => {\n      if (response) {\n        localStorage.setItem('githubToken', response.access_token)\n        setUsername().then(() => setLoading(false))\n      }\n    })\n  }, [])\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  return <Loader />\n}\n\nexport default GithubCallback\n","import styled from 'styled-components'\n\nexport const BlogContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 6rem;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n  background-color: ${(props) => props.color};\n\n  :hover {\n    background-color: ${(props) =>\n      props.theme.mode === \"light\" ? \"#F5F5F5\" : \"#3B4252\"};\n  }\n`;\n","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 3px;\n  padding: 3px 15px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${ props => props.theme.body };\n  font-weight: 300;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`\n\nexport const CardCategory = ({ value }) => (\n  \n  <StyledCategory\n    key={value.id}\n    style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n)","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px;\n  position: absolute;\n  top: -10px;\n  right: 10px;\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport readingTime from \"reading-time\";\n\nimport {\n  CardCategory,\n  CardContainer,\n  CardDescription,\n  CardHeader,\n  CardReadingTime,\n  CardTitle,\n} from \"./\";\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  };\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name;\n    });\n    console.log(blog.labels.nodes);\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer color=\"#DEDEDE\">\n      <CardHeader>\n        <>\n          {labels.map((value, i) => {\n            return <CardCategory value={value} key={i} />;\n          })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        <CardDescription>{blog.bodyText}</CardDescription>\n      </div>\n    </CardContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Avatar = styled.div`\n  width: 120px;\n  height: 120px;\n  border-radius: 60px;\n  overflow: hidden;\n  margin: 0 auto;\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { config } from '../../config'\n\nconst { enableOAuth, OAuthClientID } = config\n\nconst ButtonContainer = styled.div`\n  display: ${enableOAuth ? 'block' : 'none'};\n  position: ${({ absolute }) => absolute ? 'absolute' : 'initial'};\n  top: 10px;\n  right: 10px;\n`\nconst Button = styled.button`\n  -webkit-appearance: none;\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\n  color: #FFF;\n  border: none;\n  padding: 8px 16px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.2s;\n  outline: 0;\n\n  :hover {\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\n  }\n`\n\nconst Text = styled.span`\n  color: #FFF;\n  font-size: 18px;\n`\n\nexport const GithubLogin = ({ isAbsolute }) => {\n  const isLoggedIn = localStorage.getItem('githubToken') || false\n\n  const callOAuth = async () => {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + OAuthClientID;\n  }\n\n  return (\n    <ButtonContainer absolute={isAbsolute}>\n      {!isLoggedIn\n       ? (\n          <Button onClick={callOAuth}>\n            <FontAwesomeIcon icon={faGithub} /> Log in\n          </Button>\n         )\n       : <Text>Logged in as {localStorage.getItem('githubUsername')}</Text>\n      }\n    </ButtonContainer>\n  )\n}\n","import React from \"react\";\n\nimport { faFacebook, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { config } from \"../../config\";\nimport {\n  Avatar,\n  HeaderContainer,\n  HeaderIcons,\n  HeaderSubtitle,\n  HeaderTitle,\n  HeaderWrapper,\n} from \"./\";\n\nexport const Header = () => {\n  const items = [\n    { icon: faFacebook, link: \"https://facebook.com/vmt109\" },\n    { icon: faGithub, link: \"https://github.com/thongvo109\" },\n    { icon: faLink, link: \"http://thongvo109.com\" },\n  ];\n\n  const openLink = (url) => window.open(url);\n  const urlImage =\n    \"https://scontent-hkg4-1.xx.fbcdn.net/v/t1.6435-9/72482899_393572781589675_1219582987633426432_n.jpg?_nc_cat=106&ccb=1-7&_nc_sid=09cbfe&_nc_ohc=YsTBlMOoTzkAX8_aLP6&_nc_ht=scontent-hkg4-1.xx&oh=00_AT_1hXqoOX8EulpW5Bay8A7pxqUNBkTt_ZJWtmRoC-AapA&oe=633C7415\";\n  return (\n    <HeaderContainer>\n      {/* <GithubLogin isAbsolute={true} /> */}\n      <HeaderWrapper>\n        <Avatar>\n          <img src={urlImage} alt=\"avatart\" />\n        </Avatar>\n        <HeaderTitle>thongvo109</HeaderTitle>\n        <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\n        {/* <HeaderSubtitle> */}\n\n        <HeaderIcons>\n          {items.map((value, index) => (\n            <FontAwesomeIcon\n              size=\"2x\"\n              key={index}\n              icon={value.icon}\n              onClick={() => openLink(value.link)}\n            />\n          ))}\n        </HeaderIcons>\n        {/* </HeaderSubtitle> */}\n      </HeaderWrapper>\n    </HeaderContainer>\n  );\n};\n","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { backgroundColor, backgroundColorDark } = config.header;\n\nexport const HeaderContainer = styled.div`\n  position: relative;\n  padding: 5em;\n  text-align: center;\n  background: ${(props) => props.theme.mode === \"light\" ? backgroundColor : backgroundColorDark};\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  @media only screen and (max-width: 768px) {\n    padding: 3em;\n  }\n`","import styled from \"styled-components\";\nexport const HeaderIcons = styled.div`\n  justify-content: space-between;\n  align-items: center;\n  display: inline-flex;\n  width: 30%;\n`;\n","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { subtitleColor, subtitleColorDark } = config.header\n\nexport const HeaderSubtitle = styled.h1`\n  font-weight: 400;\n  color: ${(props) => props.theme.mode === \"light\" ? subtitleColor : subtitleColorDark};\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2.5em;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 2em;\n  }\n`","import styled from \"styled-components\";\n\nimport { config } from \"../../config\";\nconst { titleColor, titleColorDark } = config.header;\n\nexport const HeaderTitle = styled.h1`\n  font-weight: 300;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2em;\n  text-align: center;\n  font-family: \"Courier New\";\n  color: ${(props) =>\n    props.theme.mode === \"light\" ? titleColor : titleColorDark};\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const HeaderWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 1140px;\n  text-align: center;\n  \n`;\n","import { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { BlogContainer } from \"../Components/Blog\";\nimport { Card } from \"../Components/Blog/Card\";\nimport { Loader } from \"../Components/Common\";\nimport { Header } from \"../Components/Header\";\nimport { config } from \"../config\";\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, orderBy: { direction: DESC, field: CREATED_AT }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`;\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error);\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes);\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {loading ? (\n          <Loader />\n        ) : (\n          posts.map((v, i) => {\n            return <Card blog={v} key={i} />;\n          })\n        )}\n      </BlogContainer>\n    </>\n  );\n};\n\nexport default Blog;\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from \"../config\";\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: (operation) => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${window.atob(config.githubConvertedToken)}`,\n      },\n    });\n  },\n});\n\nexport const userClient = (token) =>\n  new ApolloClient({\n    uri: \"https://api.github.com/graphql\",\n    request: (operation) => {\n      operation.setContext({\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      });\n    },\n  });\n","import { reverseMapping } from './tools'\n\nconst emojis = {\n  'THUMBS_UP': '👍',\n  'THUMBS_DOWN': '👎',\n  'LAUGH': '😄',\n  'HOORAY': '🎉',\n  'CONFUSED': '😕',\n  'HEART': '❤️',\n  'ROCKET': '🚀',\n  'EYES': '👀',\n}\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || '';\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || '';\n};","export const reverseMapping = (obj) => {\n  const reversed = {};\n  Object.keys(obj).forEach((key) => {\n      reversed[obj[key]] = key\n  });\n  return reversed;\n};","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: ${ props => props.theme.toggleBorder };\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: ${ props => props.theme.toggleBorder };\n  \n  :hover {\n    color: ${ props => props.theme.text };\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: static;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`\n","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: ${ props => props.theme.text };\n`","import React from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {docco} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const HyperLink = ({children, ...props}) => (\n  <a\n    href={props.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"blog-post-anchor\"\n  >\n    {children}\n    <style jsx=\"true\">\n      {`\n        a {\n          color: #484848;\n          font-weight: 400;\n        }\n      `}\n    </style>\n  </a>\n);\n\nexport const CodeBlock = ({children}) => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {children.props.children}\n  </SyntaxHighlighter>\n);\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport moment from \"moment\";\n\nimport {PostDate} from \"../\";\nimport {AuthorAvatar, AuthorDetails, AuthorName} from \"../Author\";\nimport {CommentContainer} from \"./\";\n\nimport {HyperLink, CodeBlock} from \"../../Markdown/Overrides\";\n\nexport const Comment = ({comment}) => {\n  return (\n    <CommentContainer>\n      <AuthorDetails>\n        <AuthorAvatar\n          src={comment.author.avatarUrl}\n          alt={comment.author.login}\n        />\n        <div>\n          <AuthorName>{comment.author.login}</AuthorName>\n          <PostDate>{moment(comment.updatedAt).format(\"DD MMM YYYY\")}</PostDate>\n        </div>\n      </AuthorDetails>\n\n      <Markdown\n        options={{\n          overrides: {\n            a: {\n              component: HyperLink,\n            },\n            pre: {\n              component: CodeBlock,\n            },\n          },\n        }}\n      >\n        {comment.body}\n      </Markdown>\n    </CommentContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CommentContainer = styled.div`\n  margin-top: 3rem;\n  border-radius: 10px;\n  padding: 10px 30px;\n  position: relative;\n  color: ${(props) => props.theme.text};\n  border: ${(props) => props.theme.text} solid 1px;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLink = styled.a`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 20px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n  text-decoration: none;\n  margin: auto;\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3rem;\n`;\n","import React from \"react\";\n\nimport {\n  Comment,\n  CommentLink,\n  CommentLinkContainer,\n} from \"../Components/Post/Comment\";\n\nconst CommentsSection = ({postUrl, comments}) => {\n  return (\n    <>\n      <CommentLinkContainer>\n        <CommentLink href={postUrl + \"#issue-comment-box\"} target=\"_blank\">\n          Post a comment\n        </CommentLink>\n      </CommentLinkContainer>\n      {comments.map((v, id) => (\n        <Comment comment={v} key={id} />\n      ))}\n    </>\n  );\n};\n\nexport default CommentsSection;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from '../Utils/apollo'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from '../Utils/emoji';\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from \"../Components/Common\";\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\nimport { GithubLogin } from '../Components/Header'\nimport { HyperLink, CodeBlock } from '../Components/Markdown/Overrides';\nimport CommentsSection from \"./CommentsSection\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n        comments(first:100) {\n          nodes {\n            author {\n              ... on User {\n                avatarUrl\n                name\n                login\n              }\n            }\n            body\n            bodyHTML\n            bodyText\n            publishedAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState('');\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const [postComments, setPostComments] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem('githubToken');\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach(element => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content)\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(r => (r.emoji === emoji && r.by === user.login))\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      }\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(r => !(r.by === user.login && r.emoji === emoji))\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  }\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n        setPostComments(issues.comments.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink\n                },\n                pre: {\n                  component: CodeBlock\n                }\n              }\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {reactionPopup && (\n            <PostReaction>\n              {userToken\n                ? <GithubSelector onSelect={emoji => toggleReaction(emoji)} />\n                : <GithubLogin isAbsolute={false} />\n              }\n            </PostReaction>\n          )}\n          <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={emoji => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          />\n          <CommentsSection postUrl={post.url} comments={postComments} />\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Blog from \"./Containers/Blog\";\nimport BlogPost from \"./Containers/BlogPost\";\n\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\nconst history = createBrowserHistory();\n\nconst Router = () => {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Blog} />\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogPost} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { darkTheme } from \"./Components/Theme/Theme\";\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { useDarkMode } from \"./Components/Theme/useDarkMode\";\nimport { config } from \"./config\";\nimport GithubCallback from \"./Containers/GithubCallback\";\nimport Router from \"./Router\";\nimport { client } from \"./Utils/apollo\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === \"light\" ? darkTheme : darkTheme;\n\n  if (urlParams.get(\"code\")) {\n    return <GithubCallback />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content={config.subtitle} />\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\n          <GlobalStyles />\n          <Router />\n          <Toggle theme={theme} toggleTheme={themeToggler} />\n        </ThemeProvider>\n      </ApolloProvider>\n    </>\n  );\n};\n\nexport default Application;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)\n    }, []);\n    return [theme, themeToggler]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\nelse serviceWorker.unregister();\n\n"],"sourceRoot":""}